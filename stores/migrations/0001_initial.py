# Generated by Django 4.2.22 on 2025-07-01 16:07

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Branch Name')),
                ('address', models.TextField(verbose_name='Address')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('branch_id_number', models.UUIDField(default=uuid.uuid4, editable=False, help_text='معرف فريد يتم إنشاؤه تلقائيًا لهذا الفرع.', unique=True, verbose_name='Branch ID Number')),
                ('branch_tax_id', models.CharField(blank=True, help_text='Optional: A tax ID specific to this branch if different from the main store.', max_length=50, null=True, verbose_name='Branch Tax ID')),
                ('fee_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='The percentage fee charged by this branch for certain operations.', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Fee Percentage (%)')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Geographical latitude of the branch.', max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Geographical longitude of the branch.', max_digits=9, null=True, verbose_name='Longitude')),
                ('daily_operations', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Daily Operations ($)')),
                ('monthly_operations', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Monthly Operations ($)')),
                ('total_yearly_operations', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total Yearly Operations ($)')),
                ('last_daily_update', models.DateField(blank=True, null=True, verbose_name='Last Daily Update')),
                ('last_monthly_update', models.DateField(blank=True, null=True, verbose_name='Last Monthly Update')),
                ('last_yearly_update', models.DateField(blank=True, null=True, verbose_name='Last Yearly Update')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Branch',
                'verbose_name_plural': 'Branches',
                'ordering': ['store__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BranchPermissionProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A unique name for this branch permission profile.', max_length=100, unique=True, verbose_name='Profile Name')),
                ('description', models.TextField(blank=True, help_text='A brief description of what this profile entails.', verbose_name='Description')),
                ('can_manage_branch_profile', models.BooleanField(default=False, help_text="Can edit the branch's general information (e.g., address, phone, email).", verbose_name='Manage Branch Profile')),
                ('can_manage_local_staff', models.BooleanField(default=False, help_text='Can manage staff accounts specific to this branch (e.g., cashiers, local employees).', verbose_name='Manage Local Staff')),
                ('can_manage_local_products', models.BooleanField(default=False, help_text='Can manage products available at this specific branch (e.g., stock levels, local pricing).', verbose_name='Manage Local Products')),
                ('can_manage_local_offers', models.BooleanField(default=False, help_text='Can create and manage promotional offers specific to this branch.', verbose_name='Manage Local Offers')),
                ('can_view_local_reports', models.BooleanField(default=False, help_text='Can view operational and sales reports for this specific branch.', verbose_name='View Local Reports')),
                ('can_review_ratings', models.BooleanField(default=False, help_text='Can review customer ratings and feedback for the branch.', verbose_name='Review Ratings')),
                ('can_manage_cart', models.BooleanField(default=False, help_text='Can add/remove items from customer cart and calculate totals.', verbose_name='Manage Cart (Cashier)')),
                ('can_apply_discounts', models.BooleanField(default=False, help_text='Can apply available discounts to customer orders.', verbose_name='Apply Discounts (Cashier)')),
                ('can_finalize_invoice', models.BooleanField(default=False, help_text='Can finalize sales transactions and issue invoices.', verbose_name='Finalize Invoice (Cashier)')),
                ('can_assist_customer_rating', models.BooleanField(default=False, help_text='Can assist customers in submitting ratings after a transaction.', verbose_name='Assist Customer Rating')),
                ('can_create_promotions', models.BooleanField(default=False, help_text='Can create new promotional campaigns or offers.', verbose_name='Create Promotions')),
                ('can_track_offer_performance', models.BooleanField(default=False, help_text='Can monitor the performance and effectiveness of promotions.', verbose_name='Track Offer Performance')),
                ('can_manage_daily_statuses', models.BooleanField(default=False, help_text='Can update daily operational statuses (e.g., open/closed, special announcements).', verbose_name='Manage Daily Statuses')),
                ('can_set_display_priority', models.BooleanField(default=False, help_text='Can set the display priority for products or offers on digital displays or apps.', verbose_name='Set Display Priority')),
            ],
            options={
                'verbose_name': 'Branch Permission Profile',
                'verbose_name_plural': 'Branch Permission Profiles',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Store Name')),
                ('address', models.TextField(verbose_name='Address')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('login_email', models.EmailField(help_text='The email used for the main store account login.', max_length=254, unique=True, verbose_name='Primary Login Email')),
                ('tax_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Tax ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('total_yearly_operations', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Accumulated gross sales/operations for the current fiscal year.', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total Yearly Operations ($)')),
                ('last_yearly_update', models.DateField(blank=True, help_text='The last date when yearly operations were reset or updated.', null=True, verbose_name='Last Yearly Update')),
            ],
            options={
                'verbose_name': 'Store',
                'verbose_name_plural': 'Stores',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StorePermissionProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A unique name for this store permission profile.', max_length=100, unique=True, verbose_name='Profile Name')),
                ('description', models.TextField(blank=True, help_text='A brief description of what this profile entails.', verbose_name='Description')),
                ('can_manage_products', models.BooleanField(default=False, help_text='Can manage products (add, edit, delete, set pricing) within the store.', verbose_name='Manage Products')),
                ('can_manage_branches', models.BooleanField(default=False, help_text='Can manage branches (add, edit, delete branches, assign branch managers).', verbose_name='Manage Branches')),
                ('can_manage_staff_accounts', models.BooleanField(default=False, help_text='Can create, edit, and deactivate staff accounts for the store and its branches.', verbose_name='Manage Staff Accounts')),
                ('can_view_reports', models.BooleanField(default=False, help_text='Can view various operational and sales reports for the store.', verbose_name='View Reports')),
                ('can_manage_discounts_offers', models.BooleanField(default=False, help_text='Can create, edit, and manage store-wide discounts and promotional offers.', verbose_name='Manage Discounts & Offers')),
            ],
            options={
                'verbose_name': 'Store Permission Profile',
                'verbose_name_plural': 'Store Permission Profiles',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StoreType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Store Type',
                'verbose_name_plural': 'Store Types',
            },
        ),
    ]
